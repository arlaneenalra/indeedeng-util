plugins {
    id 'c'
}

indeedOss.activateFeature 'library'
indeedLibrary.name = 'util-mmap'

dependencies {
    implementation libs.guava
    implementation libs.slf4jApi
    implementation project(':unsafe')

    testImplementation libs.junit
    testImplementation libs.slf4jSimple
}

task cleanNative(type:Exec) {
    description 'cleans the namtive code'
    workingDir "${projectDir}/src/main/c"
    commandLine 'make', 'clean'
}

task updateNative(type:Exec) {
    dependsOn compileJava
    description 'updates the Native code for the current platform'
    workingDir 'src/main/c'
    commandLine 'make', 'clean', 'install'
}

// TODO: Build native library using Gradle software model once https://github.com/gradle/gradle-native/issues/1096 is fixed
//model {
//    platforms {
//        'Mac OS X' {
//            operatingSystem "darwin"
//            architecture "x86_64"
//        }
//        'Linux-amd64' {
//            operatingSystem "linux"
//            architecture "amd64"
//        }
//        'Linux-x86' {
//            operatingSystem "linux"
//            architecture "i386"
//        }
//    }
//
//    components {
//        main(NativeLibrarySpec) {
//            sources {
//                c {
//                    source {
//                        include "*.c"
//                    }
//                }
//            }
//            binaries.all {
//                // TODO: There has to be a non-internal way of doing this . . .
//                final javaHome = org.gradle.internal.jvm.Jvm.current().javaHome
//                cCompiler.args '-c', '-std=c99', '-mssse3', '-msse3', '-msse2', '-O3', '-funroll-loops', '-fPIC'
//                cCompiler.args '-I', "${javaHome}/include"
//                if (targetPlatform.operatingSystem.macOsX) {
//                    cCompiler.args '-I', "${javaHome}/include/darwin"
//                    // cCompiler.args '-mmacosx-version-min=10.4'
//                    // linker.args '-mmacosx-version-min=10.4'
//                } else if (targetPlatform.operatingSystem.linux) {
//                    cCompiler.args '-I', "${javaHome}/include/linux"
//                }
//            }
//        }
//    }
//}
//
//// Add native library to jar with something like this
//jar {
//    from({ mainSharedLibrary }) {
//        into 'native/Linux-amd64/libindeedmmap.so.1.0.1'
//    }
//}
